#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

getdim() { xrandr | sed -n "s/\s*\([0-9]\+x[0-9]\+\).*\*.*/\1/p"; }

updateicon() {
	echo "$1" >/tmp/recordingicon
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
}

screencast() {
	ffmpeg -y \
		-f x11grab \
		-framerate 30 \
		-s "$(getdim)" \
		-i "$DISPLAY" \
		-r 24 \
		-use_wallclock_as_timestamps 1 \
		-c:v h264 \
		-crf 0 -preset ultrafast -c:a aac \
		-f alsa -thread_queue_size 1024 -i default \
		"$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! >/tmp/recordingpid
	updateicon "^C4^  ^d^"
}

video() {
	ffmpeg \
		-f x11grab \
		-framerate 30 \
		-s "$(getdim)" \
		-i "$DISPLAY" \
		-c:v libx264 -qp 0 -r 30 \
		"$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	updateicon "^C4^ ^d^"
}

webcamhidef() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 1920x1080 \
		"$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	updateicon "^C4^󰄄 ^d^"
}

webcam() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 640x480 \
		"$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	updateicon "^C4^󰄄 ^d^"
}

audio() {
	ffmpeg \
		-f alsa -i default \
		-c:a flac \
		"$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! >/tmp/recordingpid
	updateicon "^C4^ ^d^"
}

askrecording() {
	choice=$(printf "screencast\\nvideo\\nvideo selected\\naudio\\nwebcam 480p\\nwebcam 1080p" | dmenu -bw 2 -l 6 -X 1151 -Y 15 -W 200 -i -p "Recording style:")
	case "$choice" in
	screencast) screencast ;;
	audio) audio ;;
	video) video ;;
	*selected) videoselected ;;
	"webcam 480p") webcam ;;
	"webcam 1080p") webcamhidef ;;
	esac
}

asktoend() {
	response=$(printf "Yes\\nNo" | dmenu -i -bw 2 -W 200 -X 1151 -Y 15 -l 2 -p "End recording?") &&
		[ "$response" = "Yes" ] && killrecording
}

videoselected() {
	slop -f "%x %y %w %h" >/tmp/slop
	read -r X Y W H </tmp/slop
	rm /tmp/slop

	ffmpeg \
		-f x11grab \
		-framerate 30 \
		-video_size "$W"x"$H" \
		-i :0.0+"$X,$Y" \
		-c:v libx264 -qp 0 -r 30 \
		"$HOME/box-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! >/tmp/recordingpid
	updateicon "^C4^ ^d^"
}

case "$1" in
screencast) screencast ;;
audio) audio ;;
video) video ;;
*selected) videoselected ;;
kill) killrecording ;;
*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
