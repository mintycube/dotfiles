#!/usr/bin/env bash

# Define dmenu command
dmenu_command="dmenu -i -l 17 -W 200 -Y 380 -X 5 -bw 2"

# Define options and actions as a single block
menu=$(
  cat <<EOF
󰀻  Apps            | dmenu_run -bw 2 -i -W 390 -X 8 -Y 420 -l 15 -g 3
󰊖  Games           | game-launcher
  Light/Dark Mode | themeflip
󰉦  Bar colors      | [ -e "$HOME/.cache/bar_color" ] && { rm "$HOME/.cache/bar_color"; renew-dwm; } || { touch "$HOME/.cache/bar_color"; renew-dwm; }
  Fix audio       | fix-audio
  Edit Configs    | st -e confedit
  Web Search      | dmenu_web
󰌹  Handler         | dmenuhandler
󰌌  Keybinds        | keybinds
󰋊  Mount           | mounter
󱁌  Unmount         | unmounter
  Kill            | processkill
  Pick Color      | xcolor-pick
  Screenshot      | maimpick
  Record          | dmenurecord
󰄄  Camera          | mpv --untimed --no-cache --no-config --no-osc --no-input-default-bindings --profile=low-latency --input-conf=/dev/null --title=webcam \$(ls /dev/video[0,2,4,6,8] | tail -n 1)
  NerdFont Icons  | dmenunerdsymbols
EOF
)

# Extract only the menu options for dmenu
options=$(printf "%s\n" "$(echo "$menu" | cut -d '|' -f1)")

# Launch dmenu and capture the selected option
selected_option=$(echo "$options" | $dmenu_command)

# If an option was selected, execute the corresponding action
if [[ -n $selected_option ]]; then
  action=$(echo "$menu" | grep "^$selected_option|" | cut -d '|' -f2-)
  eval "$action"
fi
